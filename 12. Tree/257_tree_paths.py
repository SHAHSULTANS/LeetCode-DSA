



# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        self.ans=[]
        
        def fun(root,s):
            if root is None:
                return
            
            
            if s=="":
                s=str(root.val)
            else:
                s+="->"+str(root.val)

            if root.left is None and root.right is None:
                self.ans.append(s)
                
            fun(root.left,s)
            fun(root.right,s)

        fun(root,"")

        return self.ans
    

# ЁЯУМ Real-world Applications:

# 1я╕ПтГг File System Traversal:
#    ржлрж╛ржЗрж▓ рж╕рж┐рж╕рзНржЯрзЗржо ржирж┐ржЬрзЗржЗ ржПржХржЯрж┐ Tree (ржбрж┐рж░рзЗржХрзНржЯрж░рж┐ ржУ ржлрж╛ржЗрж▓ рж╕рж╣) тАФ ржпрзЗржЦрж╛ржирзЗ ржЖржорж░рж╛ ржкрзНрж░рждрж┐ржЯрж┐ ржлрж╛ржЗрж▓рзЗрж░ рж╕ржорзНржкрзВрж░рзНржг path ржЦрзБржБржЬрж┐ред
#    ржЙржжрж╛рж╣рж░ржг: 
#       C:/User/Documents/file.txt тЖТ ржПржЯрж┐ ржПржХржЯрж┐ root-to-leaf pathред

# 2я╕ПтГг Decision Tree in Machine Learning:
#    ML ржПрж░ Decision Tree ржоржбрзЗрж▓ ржПрж░ ржкрзНрж░рждрзНржпрзЗржХржЯрж╛ leaf node ржПржХржЯрж╛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕рж┐ржжрзНржзрж╛ржирзНржд ржкрзНрж░ржХрж╛рж╢ ржХрж░рзЗред
#    ржХрзЛржи rule ржЧрзБрж▓рзЛ ржлрж▓рзЛ ржХрж░рзЗ ржР рж╕рж┐ржжрзНржзрж╛ржирзНрждрзЗ ржкрзМржБржЫрзЗржЫрзЗ рждрж╛ root-to-leaf path ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯред

# 3я╕ПтГг HTML/XML DOM Traversal:
#    HTML ржмрж╛ XML structure ржПржХржЯрж┐ Tree тАФ ржкрзНрж░рждрж┐ржЯрж┐ element node.
#    DOM traversal ржХрж░рзЗ element ржПрж░ ржкрзВрж░рзНржг path ржмрзЗрж░ ржХрж░рж╛ ржпрж╛рзЯ ржПржЗ root-to-leaf logic ржжрж┐рзЯрзЗред

# 4я╕ПтГг Routing Paths in Networks:
#    Network routing ржП ржмрж┐ржнрж┐ржирзНржи рж░рж╛ржЙржЯрж┐ржВ decision tree рждрзИрж░рж┐ рж╣рзЯред
#    ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржорзНржнрж╛ржмрзНржп routing path ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рждрзЗ Binary Tree Path algorithm ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ ржпрж╛рзЯред

# 5я╕ПтГг Workflow Systems:
#    ржПржХржЯрж┐ Task/Workflow engine ржпрзЗржЦрж╛ржирзЗ ржмрж┐ржнрж┐ржирзНржи ржХрж╛ржЬ dependency рж╕рж╣ ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржерж╛ржХрзЗ (as a tree),
#    рж╕рзЗржЦрж╛ржирзЗ ржкрзНрж░рждрзНржпрзЗржХржЯрж┐ execution path ржмрзЗрж░ ржХрж░рж╛ржУ root-to-leaf traversal ржПрж░ рж╕ржорж╛ржиред

# ЁЯОп Bottom Line:
#    ржпрзЗржХрзЛржирзЛ system ржпрзЗржЦрж╛ржирзЗ рж╕рж┐ржжрзНржзрж╛ржирзНржд, ржкрже ржмрж╛ ржкрзНрж░рж╕рзЗрж╕ ржЯрзНрж░рж┐ ржЖржХрж╛рж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ ржерж╛ржХрзЗ,
#    рж╕рзЗржЦрж╛ржирзЗ Binary Tree Paths algorithm ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕ржм рж╕ржорзНржнрж╛ржмрзНржп ржЙржкрж╕ржВрж╣рж╛рж░ ржмрж╛ рж░рж╛рж╕рзНрждрж╛ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛ ржпрж╛рзЯред