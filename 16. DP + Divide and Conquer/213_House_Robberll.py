from unittest import result


class Solution:
    def rob(self, nums: List[int]) -> int:
        n=len(nums)
        if n<=3:
            return max(nums)
        
        def profit(ar):
            
            
            ans=[]
            ans.append(ar[0])
            ans.append(ar[1])
            ans.append(ar[0]+ar[2])
            for i in range(3,len(ar),1):
                summation=max(ar[i]+ans[i-2],ar[i]+ans[i-3])
                ans.append(summation)
                
            return max(ans[-1],ans[-2])
        
        
        
        return max(profit(nums[0:n-1]),profit(nums[1:n]))
                
            
       
                
        
        

        # #we may include last house or not if result come from first house.
        # if ans[-1][1]==0:
        #     a=ans.pop()
        #     profit=a[0]
        #     if nums[0]>nums[-1]:
        #         profit-=nums[-1]
        #     else:
        #         profit-=nums[0]
                
        #     ans.append((profit,0))
                
        # return max(ans[-1][0],ans[-2][0])
        
        
        
        
        
        
# =============================================
# ЁЯПб Leetcode 213: House Robber II - Real Life Applications
# =============================================

# тЬЕ рж╕ржорж╕рзНржпрж╛рж░ рж╕рж╛рж░рж╛ржВрж╢:
# ржПржХржЯрж┐ рж╕рж╛рж░рзНржХрзБрж▓рж╛рж░ ржПрж▓рж╛ржХрж╛рж░ ржмрж╛рзЬрж┐ржЧрзБрж▓рзЛрж░ ржоржзрзНржпрзЗ ржЪрзБрж░рж┐ ржХрж░рждрзЗ рж╣ржмрзЗ ржПржоржиржнрж╛ржмрзЗ ржпрзЗржи
# ржХрзЛржи ржжрзБржЯрж┐ ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐рж░ ржмрж╛рзЬрж┐ ржерзЗржХрзЗ ржЪрзБрж░рж┐ ржирж╛ рж╣рзЯред
# рж▓ржХрзНрж╖рзНржп: рж╕рж░рзНржмрзЛржЪрзНржЪ ржкрж░рж┐ржорж╛ржг ржЯрж╛ржХрж╛ (ржмрж╛ рж╕рзБржмрж┐ржзрж╛) ржкрж╛ржУрзЯрж╛ред

# ЁЯФБ ржПржЗ ржкрзНрж░ржмрж▓рзЗржорзЗрж░ ржХрж╛ржарж╛ржорзЛ:
# - ржкрзНрж░рждрж┐ржЯрж┐ item ржПрж░ value ржЖржЫрзЗ
# - ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ ржжрзБржЯрзЛ item ржПржХрж╕рж╛ржерзЗ ржирзЗржУрзЯрж╛ ржпрж╛ржмрзЗ ржирж╛
# - array ржЯрж┐ circular (ржкрзНрж░ржержо ржУ рж╢рзЗрж╖ ржкрж░рж╕рзНржкрж░рзЗрж░ ржкрзНрж░рждрж┐ржмрзЗрж╢рзА)

# =============================================
# ЁЯУ▒ Application 1: Smartphone Battery Optimization
# ---------------------------------------------
# - ржХрж┐ржЫрзБ background task ржЖржЫрзЗ ржпрзЗржЧрзБрж▓рзЛ ржЪрж╛рж▓рзБ рж░рж╛ржЦрж▓рзЗ ржЙржкржХрж╛рж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯред
# - ржкрзНрж░рждрж┐ржЯрж┐ task ржПрж░ ржПржХржЯрж┐ value (importance/utility) ржЖржЫрзЗред
# - ржХрж┐ржирзНрждрзБ ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ ржжрзБржЯрж┐ ржЯрж╛ржЗржорж╕рзНрж▓ржЯ ржЪрж╛рж▓рзБ рж░рж╛ржЦрж▓рзЗ ржмрзНржпрж╛ржЯрж╛рж░рж┐ drain рж╣рзЯред
# - ржжрж┐ржирзЗрж░ рж╢рзБрж░рзБ ржУ рж╢рзЗрж╖ ржЯрж╛ржЗржорж╕рзНрж▓ржЯ рж╕ржВржпрзБржХрзНржд (circular day cycle)ред
# - рж▓ржХрзНрж╖рзНржп: ржХрзЛржи ржЯрж╛ржЗржорж╕рзНрж▓ржЯржЧрзБрж▓рзЛ ржЪрж╛рж▓рзБ рж░рж╛ржЦрж╛ рж╣ржмрзЗ ржпрж╛рждрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ utility ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯ?
# - ржПржЗ рж╕ржорж╕рзНржпрж╛ржЯрж┐ House Robber II ржПрж░ ржорждрзЛред

# =============================================
# ЁЯПе Application 2: Hospital Nurse Shift Scheduling
# ---------------------------------------------
# - ржирж╛рж░рзНрж╕ржжрзЗрж░ рж╕ржкрзНрждрж╛рж╣рзЗ 7 ржжрж┐ржирзЗрж░ рж╢рж┐ржбрж┐ржЙрж▓ ржмрж╛ржирж╛рждрзЗ рж╣ржмрзЗред
# - ржХрзЛржирзЛ ржирж╛рж░рзНрж╕ ржкрж░ржкрж░ ржжрзБржЗржжрж┐ржи ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛ (ржкрж░рж┐рж╢рзНрж░ржорзЗрж░ рж╕рзАржорж╛)ред
# - ржкрзНрж░рждрж┐ржЯрж┐ ржжрж┐ржирзЗрж░ shift ржПрж░ score ржЖржЫрзЗ (workload ржмрж╛ criticality ржЕржирзБржпрж╛рзЯрзА)ред
# - рж╕ржкрзНрждрж╛рж╣ржЯрж┐ circular (рж╢ржирж┐ржмрж╛рж░ ржУ рж░ржмрж┐ржмрж╛рж░ ржкрж░ржкрж░ ржзрж░рж╛ рж╣рзЯ)ред
# - рж▓ржХрзНрж╖рзНржп: ржирж╛рж░рзНрж╕ржжрзЗрж░ ржЬржирзНржп ржПржоржи рж╢рж┐ржбрж┐ржЙрж▓ рждрзИрж░рж┐ ржХрж░рж╛ ржпрж╛рждрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ coverage рж╣рзЯред

# =============================================
# ЁЯПШя╕П Application 3: Village Development Project Allocation
# ---------------------------------------------
# - ржХрж┐ржЫрзБ ржЧрзНрж░рж╛ржорзЗ ржЙржирзНржирзЯржи ржкрзНрж░ржХрж▓рзНржк ржжрзЗржУрзЯрж╛ рж╣ржмрзЗред
# - ржкрзНрж░рждрж┐ржЯрж┐ ржЧрзНрж░рж╛ржорзЗ ржкрзНрж░ржХрж▓рзНржк ржжрж┐рж▓рзЗ ржПржХржЯрж┐ рж╕рзБржмрж┐ржзрж╛ (score) ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯред
# - ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ ржжрзБржЯрж┐ ржЧрзНрж░рж╛ржорзЗ ржПржХрж╕рж╛ржерзЗ ржкрзНрж░ржХрж▓рзНржк ржжрзЗржУрзЯрж╛ ржпрж╛ржмрзЗ ржирж╛ (resource conflict)ред
# - ржЧрзНрж░рж╛ржоржЧрзБрж▓рзЛ ржПржХржЯрж┐ ржЧрзЛрж▓ ржЪржХрзНрж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ (circular map)ред
# - рж▓ржХрзНрж╖рзНржп: ржХрзЛржи ржЧрзНрж░рж╛ржорзЗ ржкрзНрж░ржХрж▓рзНржк ржжрж┐рж▓рзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ ржЙржирзНржирзЯржи рж╕рзБржмрж┐ржзрж╛ ржкрж╛ржУрзЯрж╛ ржпрж╛ржмрзЗ?

# =============================================
# ЁЯОУ Application 4: Course Scheduling with Conflicts
# ---------------------------------------------
# - ржХрж┐ржЫрзБ ржХрзЛрж░рзНрж╕ ржЖржЫрзЗ ржпрзЗржЧрзБрж▓рзЛрж░ ржоржзрзНржпрзЗ conflict relationship ржЖржЫрзЗред
# - ржХрзЛрж░рзНрж╕ржЧрзБрж▓рзЛ circular timetable-ржП ржжрзЗрзЯрж╛ред
# - ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ ржжрзБржЯрж┐ conflict ржХрзЛрж░рзНрж╕ ржПржХрж╕рж╛ржерзЗ ржирзЗржУрзЯрж╛ ржпрж╛ржмрзЗ ржирж╛ред
# - ржкрзНрж░рждрж┐ржЯрж┐ ржХрзЛрж░рзНрж╕рзЗрж░ value (importance/credit) ржЖржЫрзЗред
# - рж▓ржХрзНрж╖рзНржп: ржПржоржи ржХрзЛрж░рзНрж╕ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рж╛ ржпрж╛рждрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ ржХрзНрж░рзЗржбрж┐ржЯ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯред

# =============================================
# тЬЕ ржПржЗ ржзрж░ржирзЗрж░ рж╕ржм рж╕ржорж╕рзНржпрж╛ House Robber II ржПрж░ ржорждрзЛ ржжрзЗржЦрж╛ ржпрж╛рзЯ
# ржпрзЗржЦрж╛ржирзЗ "neighbor conflict" + "circular dependency" ржерж╛ржХрзЗред
