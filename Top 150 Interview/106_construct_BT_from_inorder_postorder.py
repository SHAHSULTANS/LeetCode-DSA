# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, inorder: List[int], postorder: List[int]) -> Optional[TreeNode]:
        
        
        inorder_value_index={value:index for index,value in enumerate(inorder)}
        
        self.postorder_length=len(postorder)-1
        
        def fun(i,j):
            if i>j:
                return None
            
            mid_index=inorder_value_index[postorder[self.postorder_length]]
            self.postorder_length-=1
            
            
            root=TreeNode(inorder[mid_index])
            
            root.right=fun(mid_index+1,j)
            root.left=fun(i,mid_index-1)
            
            return root

        return fun(0,len(inorder)-1)
            
        
        
# ЁЯЧВя╕П 1. ржлрж╛ржЗрж▓ рж╕рж┐рж╕рзНржЯрзЗржо ржкрзБржирж░рзНржЧржаржи (File System Reconstruction)
# ржХрзЛржирзЛ ржбрж┐ржнрж╛ржЗрж╕рзЗ ржлрж╛ржЗрж▓ ржУ ржлрзЛрж▓рзНржбрж╛рж░ ржЧржаржи рж╣рж╛рж░рж┐ржпрж╝рзЗ ржЧрзЗрж▓рзЗ, ржпржжрж┐ ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ ржЯрзНрж░рзНржпрж╛ржнрж╛рж░рзНрж╕рж╛рж▓ рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХрзЗ,
# рждрж╛рж╣рж▓рзЗ ржорзВрж▓ ржлрж╛ржЗрж▓ рж╕рж┐рж╕рзНржЯрзЗржо рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ ржкрзБржирж░рж╛рзЯ рждрзИрж░рж┐ ржХрж░рж╛ ржпрж╛ржпрж╝ред

# ЁЯУБ 2. XML ржмрж╛ JSON Document Tree рж░рж┐ржХржирж╕рзНржЯрзНрж░рж╛ржХрж╢ржи
# ржЕржирзЗржХ рж╕ржорзЯ ржбрзЗржЯрж╛ ржЯрзНрж░рж┐ ржЖржХрж╛рж░рзЗ ржерж╛ржХрзЗ, ржпрзЗржоржи XML ржмрж╛ JSONред
# ржпржжрж┐ ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ traversal рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржР рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ ржкрзБрж░рзЛ reconstruct ржХрж░рж╛ ржпрж╛ржпрж╝ред

# ЁЯза 3. рж╕рж┐ржжрзНржзрж╛ржирзНржд ржЧрзНрж░рж╣ржг ржЯрзНрж░рж┐ (Decision Tree) рж░рж┐ржХржирж╕рзНржЯрзНрж░рж╛ржХрж╢ржи
# Machine Learning ржП decision tree ржХрзЛржирзЛ ржХрж╛рж░ржгрзЗ ржирж╖рзНржЯ рж╣рж▓рзЗ ржмрж╛ ржЯрзНрж░рзЗржирж┐ржВ ржЫрж╛рзЬрж╛ржУ ржЗржиржлрж╛рж░рзЗржирзНрж╕ Tree reconstruct ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ,
# ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ ржерзЗржХрзЗ ржорзВрж▓ Tree рждрзИрж░рж┐ ржХрж░рж╛ ржпрж╛рзЯред

# ЁЯХ╡я╕П 4. Criminal Investigation ржмрж╛ Interrogation Flow Tree ржкрзБржирж░рзНржЧржаржи
# Law enforcement agency interrogation ржмрж╛ reasoning ржЯрзНрж░рж┐ рж╕ржВрж░ржХрзНрж╖ржгрзЗрж░ рж╕ржорзЯ node traversal рж░рзЗржХрж░рзНржб ржХрж░рж╛ рж╣рзЯред
# ржкрж░рзЗ ржР traversal ржерзЗржХрзЗ ржкрзБрж░рзЛ reasoning рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ ржкрзБржирж░рзБржжрзНржзрж╛рж░ ржХрж░рж╛ рж╣рзЯред

# ЁЯТм 5. Chatbot Conversation Tree
# ржПржХржЬржи ржЗржЙржЬрж╛рж░рзЗрж░ ржЪрзНржпрж╛ржЯ ржЗрждрж┐рж╣рж╛рж╕ ржмрж╛ decision path ржЯрзНрж░рзНржпрж╛ржнрж╛рж░рзНрж╕рж╛рж▓ ржлрж░рзНржорзЗ рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХрзЗред
# ржР ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ ржбрзЗржЯрж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрзБрж░рзЛ ржХржиржнрж╛рж░рзНрж╕рзЗрж╢ржи ржлрзНрж▓рзЛ ржЯрзНрж░рж┐ reconstruct ржХрж░рж╛ ржпрж╛ржпрж╝ред

# ЁЯзм 6. Family Tree ржмрж╛ Genealogy Reconstruction
# ржкрзВрж░рзНржмржкрзБрж░рзБрж╖ржжрзЗрж░ рж╕ржорзНржкрж░рзНржХ ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ ржЕржирзБржпрж╛рзЯрзА ржерж╛ржХрж▓рзЗ,
# ржР рждржерзНржп ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрж╛рж░рж┐ржмрж╛рж░рж┐ржХ ржмржВрж╢рзЗрж░ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ ржмрж╛ржирж╛ржирзЛ рж╕ржорзНржнржмред

# ЁЯУК 7. Organizational Hierarchy Tree
# ржПржХржЯрж┐ ржкрзНрж░рждрж┐рж╖рзНржарж╛ржирзЗрж░ ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░, ржпрзЗржоржи CEO ржерзЗржХрзЗ ржирж┐ржЪрзЗрж░ ржХрж░рзНржоржЪрж╛рж░рзА ржкрж░рзНржпржирзНржд,
# ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ ржЯрзНрж░рж╛ржнрж╛рж░рзНрж╕рж╛рж▓рзЗрж░ ржорж╛ржзрзНржпржорзЗ ржкрзБржирж░рзНржЧржаржи ржХрж░рж╛ ржпрж╛рзЯред

# ЁЯОо 8. Game AI Decision Trees
# ржХрзЛржирзЛ ржЧрзЗржорзЗ ржкрзНрж▓рзЗрзЯрж╛рж░ ржХрзАржнрж╛ржмрзЗ рж╕рж┐ржжрзНржзрж╛ржирзНржд ржирзЗрзЯ (AI behavior),
# рж╕рзЗржЯрж┐ ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ traversal рж╣рж┐рж╕рж╛ржмрзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж▓рзЗ,
# ржР Tree ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ behavior ржкрзБржиржГржирж┐рж░рзНржорж╛ржг рж╕ржорзНржнржм рж╣рзЯред

# ЁЯУЪ 9. Compiler Design тАУ Abstract Syntax Tree (AST)
# Compiler ржЗржиржкрзБржЯ ржХрзЛржбржХрзЗ ржЯрзНрж░рж┐ ржЖржХрж╛рж░рзЗ рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рзЗред
# ржпржжрж┐ AST ржПрж░ ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ traversal рж╕ржВрж░ржХрзНрж╖рж┐ржд ржерж╛ржХрзЗ,
# рждрж╛рж╣рж▓рзЗ ржкрзБрж░рзЛ ржХрзЛржб structure ржкрзБржирж░рзНржЧржаржи ржХрж░рж╛ рж╕ржорзНржнржмред

# ЁЯЫ░я╕П 10. Network Packet Tree Reconstruction
# ржХрж┐ржЫрзБ ржЬржЯрж┐рж▓ ржирзЗржЯржУрзЯрж╛рж░рзНржХ ржкрзНрж░рзЛржЯрзЛржХрж▓рзЗ ржкрзНржпрж╛ржХрзЗржЯ ржЯрзНрж░рж┐ ржЖржХрж╛рж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ ржерж╛ржХрзЗ (DNS, MIME),
# ржпрзЗржЯрж╛ ржЯрзНрж░рж╛ржнрж╛рж░рзНрж╕рж╛рж▓ рж▓ржЬрж┐ржХ ржЕржирзБржпрж╛рзЯрзА reconstruct ржХрж░рж╛ ржпрж╛рзЯ ржЗржи-ржЕрж░рзНржбрж╛рж░ ржУ ржкрзЛрж╕рзНржЯ-ржЕрж░рзНржбрж╛рж░ ржбрзЗржЯрж╛ ржерзЗржХрзЗред
    
            
            
            
        
        