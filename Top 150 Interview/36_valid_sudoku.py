class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        #3x3 grid check exists duplicate or not
        
        for i in range(0,9,3):
            for j in range(0,9,3):
                if self.small_grid_check_duplicate(i,j,board):
                    # print(i,j)
                    return False
        
        
        
        #Each row check 
        for i in range(9):
            mydic={}
            for j in range(9):
                if mydic.get(board[i][j]):
                    return False
                if board[i][j]!="" and board[i][j]!=".":
                    mydic[board[i][j]]=1
                    
        #Each Column Check    
        
        for i in range(9):
            mydic={}
            for j in range(9):
                if mydic.get(board[j][i]):
                    return False
                if board[j][i]!="" and board[j][i]!=".":
                    mydic[board[j][i]]=1        
                    
        return True
    
    
    
    def small_grid_check_duplicate(self,row,col,board):
        mydic={}
        
        for i in range(row,row+3,1):
            for j in range(col,col+3,1):
                if mydic.get(board[i][j]):
                    # print(i,j)
                    return True
                if board[i][j]!="" and board[i][j]!=".":
                    mydic[board[i][j]]=1

                # print(mydic)
                
        return False
    
    
    
    
# тЬЕ Real-World Applications of "36. Valid Sudoku"

# ЁЯФ╕1. Data Validation in Grids/Spreadsheets:
#    ржпрзЗржоржи ржХрзЛржирзЛ ржУрзЯрзЗржм ржЕрзНржпрж╛ржкрзЗ ржЗржЙржЬрж╛рж░ ржпржжрж┐ рзп├Чрзп ржХрзЛрж╖рзЗрж░ ржбрзЗржЯрж╛ ржЗржиржкрзБржЯ ржХрж░рзЗ,
#    рж╕рзЗржЦрж╛ржирзЗржУ ржкрзНрж░рждрж┐ рж░рзЛ ржУ ржХрж▓рж╛ржорзЗ duplicate ржерж╛ржХрж╛ ржорж╛ржирзЗ ржнрзБрж▓ ржбрзЗржЯрж╛ред
#    Valid Sudoku ржПрж░ ржорждрзЛ рж▓ржЬрж┐ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржлрж░рзНржо рж╕рж╛ржмржорж┐рж╢ржирзЗрж░ ржЖржЧрзЗ ржнрзНржпрж╛рж▓рж┐ржбрзЗрж╢ржи ржХрж░рж╛ ржпрж╛рзЯред

# ЁЯФ╕2. Constraint Checking in Scheduling Systems:
#    ржзрж░рзЛ рж╕рзНржХрзБрж▓рзЗрж░ ржЯрж┐ржЙрж╢ржи рж╕рзЗржирзНржЯрж╛рж░рзЗ ржХрзНрж▓рж╛рж╕ рж░рзБржо-рж╕рж┐ржбрж┐ржЙрж▓ рждрзИрж░рж┐ ржХрж░рзЛ,
#    ржпрзЗржЦрж╛ржирзЗ ржПржХржЗ ржШржирзНржЯрж╛рж░ ржоржзрзНржпрзЗ ржХрзЛржирзЛ рж╢рж┐ржХрзНрж╖ржХ ржмрж╛ рж░рзБржо ржжрзБржЗржмрж╛рж░ ржмрзНржпржмрж╣рзГржд рж╣ржмрзЗ ржирж╛ред
#    Sudoku ржПрж░ row, column, 3├Ч3 ржмржХрзНрж╕ ржЪрзЗржХ ржХрж░рж╛рж░ рж▓ржЬрж┐ржХ ржПржЦрж╛ржирзЗ ржХрж╛ржЬрзЗ рж▓рж╛ржЧрзЗред

# ЁЯФ╕3. Database Uniqueness Enforcement:
#    ржХрзЛржирзЛ ржЯрзЗржмрж┐рж▓рзЗ composite key ржпрзЗржоржи (country, state, city) ржЗржЙржирж┐ржХ ржХрж┐ржирж╛ ржЪрзЗржХ ржХрж░рж╛рж░ рж╕ржорзЯ,
#    рзиржбрж┐ ржорзНржпрж╛ржЯрзНрж░рж┐ржХрзНрж╕ ржкрж░рж┐рж╖рзНржХрж░ржг ржУ ржЗржЙржирж┐ржХрж┐ржЯрж┐ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж╛рж░ Sudoku-рж░ ржирзНржпрж╛рзЯ ржкржжрзНржзрждрж┐ ржмрзНржпржмрж╣рж╛рж░ рж╣рзЯред

# ЁЯФ╕4. Memory/Grid Integrity in Embedded Systems:
#    ржХрж┐ржЫрзБ ржПржорзНржмрзЗржбрзЗржб ржбрж┐ржнрж╛ржЗрж╕рзЗ RAM-ржП data blocks рзп├Чрзп ржЧрзНрж░рж┐ржбрзЗрж░ ржорждрзЛ ржмрж╕рж╛ржирзЛ ржерж╛ржХрзЗ,
#    ржбрзЗржЯрж╛ ржХрзЗржЙ ржУржнрж╛рж░рж▓рзНржпрж╛ржк ржХрж░рзЗ рж▓рзЗржЦрзЗржирж┐ рждрж╛ ржЪрзЗржХ ржХрж░рж╛рж░ ржЬржирзНржп Sudoku-style integrity check ржжрж░ржХрж╛рж░ рж╣рждрзЗ ржкрж╛рж░рзЗред

# ЁЯФ╕5. Game Development Engines:
#    UI-ржд ржмрж╛ ржЦрзЗрж▓рж╛рж░ рж▓рзЗржнрзЗрж▓ ржбрж┐ржЬрж╛ржЗржирзЗ рзиржбрж┐ ржЧрзНрж░рж┐ржбрзЗ ржХрзЛржирзЛ ржЕржмрзИржз ржЕржмржЬрзЗржХрзНржЯ ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рж╛ рж╣рзЯржирж┐
#    рждрж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рждрзЗ Similar validation logic ржкрзНрж░рзЯрзЛржЧ ржХрж░рж╛ ржпрж╛рзЯред

# ЁЯФ╕6. Machine Learning Data Preprocessing:
#    ржпржжрж┐ ржХрзЛржирзЛ ML ржоржбрзЗрж▓рзЗ ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ рзп├Чрзп ржмрж╛ N├ЧN ржорзНржпрж╛ржЯрзНрж░рж┐ржХрзНрж╕ ржЖрж╕рзЗ,
#    ржпрзЗржЦрж╛ржирзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж░рзЛ, ржХрж▓рж╛ржо ржмрж╛ рж╕рж╛ржмржЧрзНрж░рж┐ржбрзЗ ржмрж┐рж╢рзЗрж╖ ржирж┐рзЯржо ржорж╛ржирждрзЗ рж╣ржмрзЗ,
#    рждрж╛рж╣рж▓рзЗ Valid Sudoku problem ржПрж░ рж╕ржорж╛ржзрж╛ржи ржоржбрзЗрж▓ рж╣рж┐рж╕рзЗржмрзЗ ржХрж╛ржЬрзЗ ржЖрж╕рзЗред

# ЁЯФ╕7. Configuration File Validation:
#    ржХрж┐ржЫрзБ рж╕рж┐рж╕рзНржЯрзЗржорзЗ settings/configuration matrix ржЖржХрж╛рж░рзЗ ржерж╛ржХрзЗ,
#    ржкрзНрж░рждрж┐ржЯрж┐ ржЦрж╛ржирзЗ ржмрж╛ржжрзНржп, рж░ржВ, ржмрж╛ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╣ржУрзЯрж╛ ржЙржЪрж┐рждред
#    ржнрзНржпрж╛рж▓рж┐ржб рж╕рзБржбрзЛржХрзБ ржЪрзЗржХ ржХрж░рзЗ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рж╛ ржпрж╛рзЯ ржХрзЛржирзЛ ржХрзНрж╖рзЗрждрзНрж░ ржкрзБржирж░рж╛ржмрзГрждрзНрждрж┐ рж╣рзЯржирж┐ред

# ЁЯза рж╕рж╛рж░ рж╕ржВржХрзНрж╖рзЗржк:
#  тАЬValid SudokuтАЭ ржорж╛ржирзЗ ржПржХржЯрж┐ рзиржбрж┐ ржЧрзНрж░рж┐ржбрзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж░рзЛ, ржХрж▓рж╛ржо ржУ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рд╕рдмтАУржмржХрзНрж╕рзЗ ржХржкрж┐ржХрж▓ржи ржмрж╛
#   ржбрзБржкрзНрж▓рж┐ржХрзЗрж╢ржи ржирзЗржЗтАФржПржЗ ржзрж╛рж░ржгрж╛ ржкрзНрж░рзЯрзЛржЧ ржХрж░рж╛ ржпрж╛рзЯ ржпрзЗржЦрж╛ржирзЗржЗ рзиржбрж┐ ржбрзЗржЯрж╛ ржЗржЙржирж┐ржХ ржУ constraint-basedред
