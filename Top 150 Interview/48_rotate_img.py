class Solution:
    def rotate(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """

        # ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶∏‡¶æ‡¶∞‡¶ø ‡¶ì ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶∏‡¶æ‡¶∞‡¶ø ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ (row)
        # Top and bottom row indices
        r1 = 0
        r2 = len(matrix) - 1

        # ‡¶¨‡¶æ‡¶Å ‡¶™‡¶æ‡¶∂‡ßá ‡¶ì ‡¶°‡¶æ‡¶® ‡¶™‡¶æ‡¶∂‡ßá ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ (column)
        # Left and right column indices
        c1 = 0
        c2 = len(matrix[0]) - 1

        # ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø outer layer ‡¶ò‡ßã‡¶∞‡¶æ‡¶§‡ßá ‡¶Ø‡¶§‡¶ï‡ßç‡¶∑‡¶£ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶≠‡ßá‡¶§‡¶∞‡ßá‡¶∞ ‡¶¶‡¶ø‡¶ï‡ßá ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡¶ø
        # Process each outer layer, moving inward
        while r1 <= r2:

            # ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡ßç‡¶ï‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶¨‡ßç‡¶≤‡¶ï‡ßá ‡¶ï‡¶§‡¶¨‡¶æ‡¶∞ ‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶¶‡¶ø‡¶ï ‡¶ò‡ßã‡¶∞‡¶æ‡¶§‡ßá ‡¶π‡¶¨‡ßá
            # How many steps to rotate in the current square layer
            loop = r2 - r1  
            updown = leftright = 0  # ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶ö‡¶ï‡ßç‡¶∞‡ßá ‡¶â‡¶™‡¶∞‡ßá/‡¶®‡¶ø‡¶ö‡ßá ‡¶ì ‡¶¨‡¶æ‡¶Æ‡ßá/‡¶°‡¶æ‡¶®‡ßá ‡¶Ø‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø offset
                                    # Offsets to move up/down and left/right within the layer

            while loop:
                # ‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶® ‡¶®‡¶æ‡¶ì
                # Get the values at four corners
                bottom_left = matrix[r2 - updown][c1]
                top_left = matrix[r1][c1 + leftright]
                top_right = matrix[r1 + updown][c2]
                bottom_right = matrix[r2][c2 - leftright]

                # ‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶® ‡¶ò‡ßã‡¶∞‡¶æ‡¶ì (90¬∞ clockwise)
                # Rotate the corners 90 degrees clockwise
                matrix[r1][c1 + leftright] = bottom_left         # top-left = bottom-left
                matrix[r1 + updown][c2] = top_left              # top-right = top-left
                matrix[r2][c2 - leftright] = top_right          # bottom-right = top-right
                matrix[r2 - updown][c1] = bottom_right          # bottom-left = bottom-right

                # ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶™‡¶¶‡¶ï‡ßç‡¶∑‡ßá‡¶™‡ßá ‡¶Ø‡¶æ‡¶ì (‡¶è‡¶ï ‡¶ß‡¶æ‡¶™ ‡¶¨‡¶æ‡¶Æ‡ßá/‡¶°‡¶æ‡¶®‡ßá ‡¶ì ‡¶â‡¶™‡¶∞‡ßá/‡¶®‡¶ø‡¶ö‡ßá)
                # Move to next set of corners in the current layer
                loop -= 1
                leftright += 1
                updown += 1

            # ‡¶è‡¶ï ‡¶≤‡ßá‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ò‡ßã‡¶∞‡¶æ‡¶®‡ßã‡¶∞ ‡¶™‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá‡¶∞ ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶∏‡ßç‡¶ï‡¶Ø‡¶º‡¶æ‡¶∞‡ßá ‡¶Ø‡¶æ‡¶ì
            # Move inward to the next inner layer
            r1 += 1
            r2 -= 1
            c1 += 1
            c2 -= 1



# ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá ‡¶ï‡ßã‡¶•‡¶æ‡ßü ‡¶è‡¶á matrix (image) rotate ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡ßü:

# 1. üñºÔ∏è ‡¶õ‡¶¨‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡¶æ‡¶¶‡¶®‡¶æ ‡¶∏‡¶´‡¶ü‡¶ì‡ßü‡ßç‡¶Ø‡¶æ‡¶∞ (Photo Editor):
#     - ‡¶Ø‡¶ñ‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ 'Rotate Right' ‡¶¨‡¶æ 'Rotate Left' ‡¶¨‡ßã‡¶§‡¶æ‡¶Æ‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßá,
#         ‡¶§‡¶ñ‡¶® ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶™‡¶ø‡¶ï‡ßç‡¶∏‡ßá‡¶≤ ‡¶ó‡ßÅ‡¶≤‡ßã 2D ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßç‡¶∞‡¶ø‡¶ï‡ßç‡¶∏ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ò‡ßã‡¶∞‡¶æ‡¶®‡ßã ‡¶π‡ßü‡•§

# 2. ü§ñ ‡¶Æ‡ßá‡¶∂‡¶ø‡¶® ‡¶≤‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶≠‡¶ø‡¶∂‡¶®:
#     - ‡¶°‡ßá‡¶ü‡¶æ ‡¶Ö‡¶ó‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶õ‡¶¨‡¶ø ‡¶ò‡ßã‡¶∞‡¶æ‡¶®‡ßã ‡¶π‡ßü ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶ï‡ßã‡¶£ ‡¶•‡ßá‡¶ï‡ßá‡¶ì 
#         ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶ö‡¶ø‡¶®‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£: ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶∞‡¶æ‡¶á‡¶ü‡¶ø‡¶Ç ‡¶∞‡¶ø‡¶ï‡¶ó‡¶®‡¶ø‡¶∂‡¶®‡•§

# 3. üéÆ ‡¶ó‡ßá‡¶Æ ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü (2D ‡¶ó‡ßá‡¶Æ):
#     - Tetris-‡¶è‡¶∞ ‡¶Æ‡¶§ ‡¶ó‡ßá‡¶Æ‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶¨‡ßç‡¶≤‡¶ï ‡¶ò‡ßã‡¶∞‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶è‡¶á ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßç‡¶∞‡¶ø‡¶ï‡ßç‡¶∏ ‡¶∞‡ßã‡¶ü‡ßá‡¶∂‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡ßü‡•§

# 4. üõ∞Ô∏è ‡¶∏‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶≤‡¶æ‡¶á‡¶ü ‡¶á‡¶Æ‡ßá‡¶ú ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç:
#     - ‡¶∏‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶≤‡¶æ‡¶á‡¶ü ‡¶¨‡¶æ ‡¶°‡ßç‡¶∞‡ßã‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶Ö‡¶∞‡¶ø‡ßü‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∂‡¶® ‡¶†‡¶ø‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ò‡ßã‡¶∞‡¶æ‡¶®‡ßã ‡¶π‡ßü‡•§

# 5. üìä ‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï‡¶æ‡¶≤ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏ (GUI):
#     - ‡¶Ø‡¶ñ‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶ï‡ßã‡¶® ‡¶õ‡¶¨‡¶ø ‡¶ò‡ßã‡¶∞‡¶æ‡¶§‡ßá ‡¶ö‡¶æ‡ßü GUI ‡¶§‡ßá, ‡¶§‡¶ñ‡¶® ‡¶è‡¶ü‡¶ø ‡¶ï‡ßã‡¶° ‡¶≤‡ßá‡¶≠‡ßá‡¶≤‡ßá ‡¶è‡¶Æ‡¶® ‡¶ò‡ßÇ‡¶∞‡ßç‡¶£‡¶® ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá‡¶á ‡¶ò‡¶ü‡ßá‡•§

# Note: ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ï‡ßã‡¶°‡ßá 90 ‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø clockwise ‡¶ò‡ßã‡¶∞‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá image matrix‡•§